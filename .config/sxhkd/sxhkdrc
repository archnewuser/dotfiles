#
# wm independent hotkeys
#

# Scratch
super + shift + Return
        bspwm-toggle-visibility st

  
# Rotate tree
super + shift + {a,s}
    bspc node @/ -C {forward,backward}

# Send to other monitor
super + shift + o
    bspc node -m last --follow
    
# Keybindings
super + F3
#        urxvt -e ~/.config/sxhkd/keybindings.sh
         urxvt -geometry 90x35 -name urxvt_keys_help -e ~/.config/sxhkd/show_help.sh
# rofi power            
super + F2
         ~/.config/rofi/power.sh
         
# rofi
super + F12
    rofi -show run
	
# rofi theme selector
super + r
    rofi-theme-selector

# edit file menu         
super + alt + e
         ~/.config/.dmenu/dmenu-edit-configs.sh
# trading menu        
super + alt + t
         ~/.config/.dmenu/dmenu-trading.sh         
         
# terminal emulator
super + Return
	urxvt

# program launcher
#super + d
#	dmenu_run
# pcmanfm
#super + e
#	pcmanfm
# vscode	
#super + v
#	code
# geany	
super + shift + e
	geany
# top	
super + alt + h
	st -e top
# calculator	            
super + alt + c
    galculator
# browser	
#super + w
#	$BROWSER
	
super + {d, e, v, w}
  {dmenu_run, pcmanfm, code, $BROWSER}
	
#
# bspwm hotkeys
#

# quit/restart bspwm
#super + alt + {q,r}
#	bspc {quit,wm -r}
# restart bspwm
restart bspwm
super + shift +r
   bspc {wm -r}

# close and kill
super + {_,shift + }q
	bspc node -{c,k}
	
# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next
	
# swap the current node and the biggest window
#super + g
#	bspc node -s biggest.window

#
# state/flags
#

# set the window state
#super + {t,shift + t,s,f}
#	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
#super + ctrl + {m,x,y,z}
#	bspc node -g {marked,locked,sticky,private}
	
# Increase volume
super + {equal,plus}
	amixer sset Master {5,15}%+; pkill -RTMIN+10 blocks
# Decrease volume
super {_,shift +} + minus
	amixer sset Master {5,15}%-; pkill -RTMIN+10 blocks
# mute volume
super + shift + m
	amixer sset Master toggle; pkill -RTMIN+10 blocks

# Audiokeys
XF86AudioMute
	amixer sset Master toggle; pkill -RTMIN+10 blocks

XF86Audio{Raise,Lower}Volume
	amixer sset Master 5%{+,-}; pkill -RTMIN+10 blocks
	
# Mirror and flip leaves of tree
super + shift + {comma,period}
	bspc node @/ -F {horizontal,vertical}
	
# Toggle gaps
super + shift + d
	bspc config window_gap {0,5}
# Increase/descrease gap size
super { ,+ shift }+ z
	bspc config window_gap $(($(bspc config window_gap) {+,-} 3))
	
# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
# shutdown computer
super + shift + x
	prompt "Shutdown computer?" "sudo -A shutdown -h now"
# reboot computer
super + shift + BackSpace
	prompt "Reboot computer?" "sudo -A reboot"
# logout
super + shift + Escape
	prompt 'Leave Xorg?' 'killall Xorg'
# select previous,next desktop
super + {g,semicolon}
	bspc desktop {prev,next}.occupied --focus
super + {Prior,Next}
	bspc desktop {prev,next}.occupied --focus
# select previous,next desktop
super + {Tab,backslash}
	bspc desktop last --focus
	
# Select previous / next desktop
#super + {n,m}
#    bspc desktop -f {prev.occupied,next.occupied}
 
# cycle windows
alt + {_,shift + }Tab
    bspc node -f {next,prev}

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# alternate between the tiled and monocle layout

#super + {_,shift + }f
#	bspc {desktop -l next,node -t ~fullscreen}
	
# send the newest marked node to the newest preselected node
#super + y
#	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest local node
super + space
	bspc node -s biggest.local || bspc node -s next.local
	
# Toggle fullscreen
#super + shift + f 
#	bspc node -t {fullscreen,tiled}	
	
# Toggle fullscreen
super + f 
	bspc node -t {fullscreen,tiled}			
	
# Move current window to largest space or preselected area if there is one.
super + shift + Return
    windowpromoter
        
# Go to specific window
#super + Tab
#	WindowSelector

# set the window state	
super + {t,shift + t,s}
	bspc node -t {tiled,pseudo_tiled,floating}
# set window floating
super + shift + space
	bspc node focused -t \~floating 
	
# rotate current node 90 degrees
super + y
	bspc node @focused:/ -R 90

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# move/resize
#
# resize window
super + {h,j,k,l}
	bspwm_resize.sh {west,south,north,east}
# resize window	
super + ctrl + {Left,Down,Up,Right}
	bspwm_resize.sh {west,south,north,east}

#  expand a window by moving one of its side outward
super + alt + {y,i,u,o}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
	
# contract a window by moving one of its side inward
super + alt + shift + {y,i,u,o}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}
	
#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}
	
# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}
	
# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window
	
# focus the next/previous desktop in the current monitor
super + bracket{left,right}
    bspc desktop -f {prev,next}.local
    
# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last
	
# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on
	
# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}' --follow

#
# preselect
#

# preselect the direction
#super + ctrl + {h,j,k,l}
#	bspc node -p {west,south,north,east}

# preselect the direction
#super + {u,o}
#bspc node -p {south,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
	
~button1
	DidIClickDesktop.sh && gapgrab
~button2
	DidIClickDesktop.sh && BspwmDesktopMenu
super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))
	
